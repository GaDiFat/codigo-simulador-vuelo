{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gdfat\\\\Documents\\\\Web Development\\\\ProyectosReact\\\\insertion\\\\src\\\\InsertionSortVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertionSortVisualization = () => {\n  _s();\n  const [array, setArray] = useState([12, 11, 13, 5, 6]);\n  const [step, setStep] = useState(0);\n  const [sortedArray, setSortedArray] = useState([...array]);\n  const [sortedIndex, setSortedIndex] = useState(0);\n  const handleNextStep = () => {\n    let newArray = [...sortedArray];\n    let sortedPart = sortedIndex;\n    if (step < array.length) {\n      let key = newArray[step];\n      let j = step - 1;\n      while (j >= 0 && newArray[j] > key) {\n        newArray[j + 1] = newArray[j];\n        j = j - 1;\n      }\n      newArray[j + 1] = key;\n      setSortedArray(newArray);\n      setSortedIndex(step); // Actualizar parte ordenada\n      setStep(step + 1);\n    }\n  };\n  const handleReset = () => {\n    setSortedArray([...array]);\n    setStep(0);\n    setSortedIndex(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualizaci\\xF3n de Inserci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: sortedArray.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `array-bar ${index <= sortedIndex ? \"sorted\" : \"unsorted\"} ${index === step ? \"current\" : \"\"}`,\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextStep,\n      disabled: step >= array.length,\n      children: \"Siguiente Paso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reiniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InsertionSortVisualization, \"4wfj8Ewd6XPhjfJdMmOkg1hrLkI=\");\n_c = InsertionSortVisualization;\nexport default InsertionSortVisualization;\nvar _c;\n$RefreshReg$(_c, \"InsertionSortVisualization\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InsertionSortVisualization","_s","array","setArray","step","setStep","sortedArray","setSortedArray","sortedIndex","setSortedIndex","handleNextStep","newArray","sortedPart","length","key","j","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","num","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gdfat/Documents/Web Development/ProyectosReact/insertion/src/InsertionSortVisualization.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst InsertionSortVisualization = () => {\r\n  const [array, setArray] = useState([12, 11, 13, 5, 6]);\r\n  const [step, setStep] = useState(0);\r\n  const [sortedArray, setSortedArray] = useState([...array]);\r\n  const [sortedIndex, setSortedIndex] = useState(0);\r\n\r\n  const handleNextStep = () => {\r\n    let newArray = [...sortedArray];\r\n    let sortedPart = sortedIndex;\r\n\r\n    if (step < array.length) {\r\n      let key = newArray[step];\r\n      let j = step - 1;\r\n\r\n      while (j >= 0 && newArray[j] > key) {\r\n        newArray[j + 1] = newArray[j];\r\n        j = j - 1;\r\n      }\r\n      newArray[j + 1] = key;\r\n\r\n      setSortedArray(newArray);\r\n      setSortedIndex(step); // Actualizar parte ordenada\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setSortedArray([...array]);\r\n    setStep(0);\r\n    setSortedIndex(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Visualización de Inserción</h1>\r\n      <div className=\"array-container\">\r\n        {sortedArray.map((num, index) => (\r\n          <div\r\n            key={index}\r\n            className={`array-bar ${\r\n              index <= sortedIndex ? \"sorted\" : \"unsorted\"\r\n            } ${index === step ? \"current\" : \"\"}`}\r\n          >\r\n            {num}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleNextStep} disabled={step >= array.length}>\r\n        Siguiente Paso\r\n      </button>\r\n      <button onClick={handleReset}>Reiniciar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertionSortVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}